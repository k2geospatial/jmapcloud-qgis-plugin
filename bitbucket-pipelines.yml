# this is a bitbucket pipeline idea to merge the dev branch to the master branch by filtering out unnecessary files with a .cleanignore custom file that acts like .gitignore
# TODO: review this file
pipelines:
  custom:
    publish-to-master:
      - variables:
          - name: SOURCE_BRANCH
            default: dev
      - step:
          name: Publish from $SOURCE_BRANCH to master
          image: atlassian/default-image:3
          script:
            - git config --global user.name "Bitbucket Pipelines"
            - git config --global user.email "pipelines@bitbucket.org"
            
            # Clone the source branch (dev by default)
            - git clone --single-branch --branch $SOURCE_BRANCH https://x-token-auth:$BB_TOKEN@bitbucket.org/$BITBUCKET_REPO_OWNER/$BITBUCKET_REPO_SLUG.git source-code
            - cd source-code

            # Create a clean folder with all the contents of the source branch
            - mkdir clean
            - cp -r . clean/
            - cd clean

            # Delete the files/folders listed in .cleanignore
            - |
              if [ -f ../.cleanignore ]; then
                while IFS= read -r path; do
                  echo "Excluding: $path"
                  rm -rf "$path"
                done < ../.cleanignore
              fi

            # Move to the master branch and overwrite its contents with the cleaned files (maybe not the best solution)
            - git fetch origin
            - git checkout master
            - rm -rf *
            - cp -r ../clean/* .
            - git add .
            - git commit -m "Publish from $SOURCE_BRANCH" || echo "Nothing to commit"
            - git push origin master